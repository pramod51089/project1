locals {
  tags = {
    Division    = "${var.division}"
    Project     = "${var.project}"
    Application = "${var.application}"
    Environment = "${var.environment}"
    Node        = "${var.node}"
    Created_by  = "${var.created_by}"
  }
}

#---- VPC Remote state

data "terraform_remote_state" "vpc" {
  backend = "s3"
  workspace = "${terraform.workspace}"
  
  config = {
    bucket = "${var.terraform_remote_state_bucket}"
    key = "${var.terraform_remote_state_vpc_key}"
    region = "${var.terraform_remote_state_region}"
  }
}

#---- Security group Remote state

data "terraform_remote_state" "sg" {
  backend = "s3"
  workspace = "${terraform.workspace}"
  
  config = {
    bucket = "${var.terraform_remote_state_bucket}"
    key = "${var.terraform_remote_state_sg_key}"
    region = "${var.terraform_remote_state_region}"
  }
}

#---- VPC 

data "aws_vpc" "vpc" {
  id = "${data.terraform_remote_state.vpc.vpc_id}"
}

#---- Create Elasticache replication group

resource "aws_elasticache_replication_group" "tf_redis" {
  replication_group_id          = "${format("%.20s","${var.environment}-${var.redis_name}")}"
  replication_group_description = "Terraform-managed ElastiCache replication group for ${var.environment}-${var.redis_name}-${data.aws_vpc.vpc.tags["Name"]}"
  number_cache_clusters         = "${var.redis_clusters}"
  node_type                     = "${var.redis_node_type}"
  automatic_failover_enabled    = "${var.redis_failover}"
  engine_version                = "${var.redis_version}"
  port                          = "${var.redis_port}"
  parameter_group_name          = "${aws_elasticache_parameter_group.tf_redis_parameter_group.id}"
  subnet_group_name             = "${aws_elasticache_subnet_group.tf_redis_subnet_group.id}"
  security_group_ids            = ["${data.terraform_remote_state.sg.redis_security_group}"]
  apply_immediately             = "${var.apply_immediately}"
  maintenance_window            = "${var.redis_maintenance_window}"
  snapshot_window               = "${var.redis_snapshot_window}"
  snapshot_retention_limit      = "${var.redis_snapshot_retention_limit}"
  at_rest_encryption_enabled    = "${var.redis_at_rest_encryption_enabled}"
  transit_encryption_enabled    = "${var.redis_transit_encryption_enabled}"
}

#---- Create Elasticache parameter group

resource "aws_elasticache_parameter_group" "tf_redis_parameter_group" {
  name        = "${replace(format("%.255s", lower(replace("${var.environment}-${var.redis_name}-${data.aws_vpc.vpc.tags["Name"]}", "_", "-"))), "/\\s/", "-")}"
  description = "Terraform-managed ElastiCache parameter group for ${var.environment}-${var.redis_name}-${data.aws_vpc.vpc.tags["Name"]}"

  # Strip the patch version from redis_version var
  family    = "redis${replace(var.redis_version, "/\\.[\\d]+$/","")}"
  parameter = "${var.redis_parameters}"
}

#---- Create Elasticache subnet group

resource "aws_elasticache_subnet_group" "tf_redis_subnet_group" {
  name       = "${replace(format("%.255s", lower(replace("${var.environment}-${var.redis_name}-${data.aws_vpc.vpc.tags["Name"]}", "_", "-"))), "/\\s/", "-")}"
  subnet_ids = ["${data.terraform_remote_state.vpc.private_subnets}"]
}
